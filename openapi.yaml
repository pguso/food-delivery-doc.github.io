openapi: 3.0.0
info:
  description: This is a API for ordering food from restaurants for clients. Its has also
    some endpoints for the restaurant to manage orders etc
  version: 1.0.0
  title: Food Delivery API
tags:
  - name: order
    description: Ordering dishes with optional additional incredients
  - name: client
    description: Clients who order dishes from restaurant
  - name: product
    description: Dishes from the restaurant
  - name: company
    description: Restaurants
  - name: email
    description: Sending email notofications to restaurant or client
  - name: payment
    description: Management of paypal payments
  - name: coupon
    description: Management of coupons
  - name: user
    description: Operations about user - authentication with jwt
paths:
  "/coupons/{number}/status":
    get:
      tags:
        - product
      summary: Get coupon status
      description: ""
      operationId: getCouponStatus
      parameters:
        - name: number
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Coupon"
        "400":
          description: Invalid ID supplied
  /coupons:
    get:
      tags:
        - coupon
      summary: Get all coupons
      description: ""
      operationId: listCoupons
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Coupon"
    post:
      tags:
        - coupon
      summary: Add new coupon
      description: ""
      operationId: addCoupon
      requestBody:
        $ref: "#/components/requestBodies/Coupon"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Coupon"
  /payments:
    get:
      tags:
        - payment
      summary: Get all payments
      description: ""
      operationId: listPayment
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Payment"
    post:
      tags:
        - payment
      summary: Add new payment
      description: ""
      operationId: addPayment
      requestBody:
        $ref: "#/components/requestBodies/Payment"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Payment"
  /products/categories:
    get:
      tags:
        - product
      summary: Get all categories
      description: ""
      operationId: getCategories
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Category"
    post:
      tags:
        - product
      summary: Add new category
      description: ""
      operationId: addCategory
      requestBody:
        $ref: "#/components/requestBodies/Category"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Category"
    put:
      tags:
        - product
      summary: Update category
      description: ""
      operationId: updateCategory
      requestBody:
        $ref: "#/components/requestBodies/Category"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Category"
  /products/addons:
    get:
      tags:
        - product
      summary: Get all addon
      description: ""
      operationId: getAddons
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Addon"
    post:
      tags:
        - product
      summary: Add new addon
      description: ""
      operationId: addAddon
      requestBody:
        $ref: "#/components/requestBodies/Addon"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Addon"
    put:
      tags:
        - product
      summary: Update addon
      description: ""
      operationId: updateAddon
      requestBody:
        $ref: "#/components/requestBodies/Addon"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Addon"
  /products:
    post:
      tags:
        - product
      summary: Add new product
      description: ""
      operationId: addProduct
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Product"
        description: Product object that needs to be added to the store
        required: true
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
  "/products/{id}/categories":
    get:
      tags:
        - product
      summary: Get product categories
      description: ""
      operationId: getProductCategories
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Category"
        "400":
          description: Invalid ID supplied
  "/products/{id}/addons":
    get:
      tags:
        - product
      summary: Get product addons
      description: ""
      operationId: getProductAddons
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Addon"
        "400":
          description: Invalid ID supplied
  "/products/{id}":
    get:
      tags:
        - product
      summary: Get product
      description: ""
      operationId: getProduct
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        "400":
          description: Invalid ID supplied
    put:
      tags:
        - product
      summary: Update product
      description: ""
      operationId: updateProduct
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        "400":
          description: Invalid ID supplied
    delete:
      tags:
        - product
      summary: Delete product
      description: ""
      operationId: deleteProduct
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        "400":
          description: Invalid ID supplied
  "/orders/{id}/payments/status":
    get:
      tags:
        - order
      summary: Get payment status of specified order
      description: ""
      operationId: getOrderPaymentStatus
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaymentStatus"
        "400":
          description: Invalid ID supplied
  "/orders/{id}/status":
    get:
      tags:
        - order
      summary: Get status of specified order
      description: ""
      operationId: getOrderStatus
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderStatus"
        "400":
          description: Invalid ID supplied
    put:
      tags:
        - order
      summary: Updates status of order
      description: ""
      operationId: updateOrderStatus
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
        "400":
          description: Invalid ID supplied
  "/orders/{id}":
    get:
      tags:
        - order
      summary: Get a new order
      description: ""
      operationId: getOrder
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
        "400":
          description: Invalid ID supplied
    delete:
      tags:
        - order
      summary: Delete order is status is open
      description: ""
      operationId: deleteOrder
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
        "400":
          description: Invalid ID supplied
    put:
      tags:
        - order
      summary: Updates order
      description: ""
      operationId: updateOrder
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
        "400":
          description: Invalid ID supplied
  /orders:
    post:
      tags:
        - order
      summary: Add a new order
      description: ""
      operationId: addOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Order"
        description: Order object that needs to be added to the store
        required: true
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
        "400":
          description: Invalid ID supplied
    get:
      tags:
        - order
      summary: Get orders
      description: ""
      operationId: getOrders
      parameters:
        - name: status
          in: query
          required: false
          schema:
            type: string
            enum:
              - open
              - started
              - canceled
              - delivered
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
        "400":
          description: Invalid ID supplied
  /company:
    post:
      tags:
        - company
      summary: Add a new company
      description: ""
      operationId: addCompany
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Company"
        description: Company object that needs to be added to the store
        required: true
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Company"
        "400":
          description: Invalid ID supplied
    get:
      tags:
        - company
      summary: Get companies
      description: ""
      operationId: getCompanies
      parameters:
        - name: status
          in: query
          required: false
          schema:
            type: string
            enum:
              - open
              - closed
        - name: minDeliveryAmount
          in: query
          required: false
          schema:
            type: number
        - name: rating
          in: query
          required: false
          schema:
            type: number
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Company"
        "400":
          description: Invalid ID supplied
  "/company/{id}":
    get:
      tags:
        - company
      summary: Get company
      description: ""
      operationId: getCompany
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Company"
        "400":
          description: Invalid ID supplied
    delete:
      tags:
        - company
      summary: Delete company
      description: ""
      operationId: deleteCompany
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Company"
        "400":
          description: Invalid ID supplied
    put:
      tags:
        - company
      summary: Update company
      description: ""
      operationId: updateCompany
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Company"
        description: Company object that needs to be added updated in the store
        required: true
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Company"
        "400":
          description: Invalid ID supplied
  "/company/{id}/status":
    get:
      tags:
        - company
      summary: Get company open status
      description: ""
      operationId: getCompanyStatus
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Invalid ID supplied
    put:
      tags:
        - company
      summary: Update company open status
      description: ""
      operationId: updateCompanyStatus
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: status
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Invalid ID supplied
  "/company/{id}/postcodes":
    get:
      tags:
        - company
      summary: Get company postcodes for delivery
      description: ""
      operationId: getCompanyPostcodes
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Postcode"
        "400":
          description: Invalid ID supplied
  /email:
    post:
      tags:
        - email
      summary: Send new mail
      description: ""
      operationId: sendEmail
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EMail"
        description: Mail that needs to be send
        required: true
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EMail"
        "400":
          description: Invalid ID supplied
  /clients:
    post:
      tags:
        - client
      summary: Add new client
      description: ""
      operationId: addClient
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Client"
        description: Mail that needs to be send
        required: true
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Client"
        "400":
          description: Invalid ID supplied
  "/clients/{id}":
    delete:
      tags:
        - client
      summary: Delete client
      description: ""
      operationId: deleteClient
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Client"
        "400":
          description: Invalid ID supplied
    get:
      tags:
        - client
      summary: Get client
      description: ""
      operationId: getClient
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Client"
        "400":
          description: Invalid ID supplied
    put:
      tags:
        - client
      summary: Update client
      description: ""
      operationId: updateClient
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Client"
        description: Payment object that needs to be added to the store
        required: true
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Client"
        "400":
          description: Invalid ID supplied
servers:
  - url: /v1
components:
  requestBodies:
    Coupon:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Coupon"
      description: Coupon object that needs to be added to the store
      required: true
    Category:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Category"
      description: Category object that needs to be added to the store
      required: true
    Payment:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Payment"
      description: Payment object that needs to be added to the store
      required: true
    Addon:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Addon"
      description: Addon object that needs to be updated in the store
      required: true
  schemas:
    Order:
      type: object
      properties:
        id:
          type: integer
          format: int64
        products:
          type: array
          items:
            $ref: "#/components/schemas/Product"
        deliveryDate:
          type: string
          format: date-time
        status:
          $ref: "#/components/schemas/OrderStatus"
        client:
          $ref: "#/components/schemas/Client"
        complete:
          type: boolean
          default: false
        coupon:
          $ref: "#/components/schemas/Coupon"
    Product:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        info:
          type: string
        price:
          type: number
        category:
          $ref: "#/components/schemas/Category"
        addons:
          type: array
          items:
            $ref: "#/components/schemas/Addon"
    Category:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
    Addon:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        price:
          type: number
    OrderStatus:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          description: Order Status
          enum:
            - open
            - started
            - canceled
            - delivered
    Payment:
      description: incompleted, has to be extended due development
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        client:
          $ref: "#/components/schemas/Client"
        paymentStatus:
          $ref: "#/components/schemas/PaymentStatus"
        links:
          type: array
          items:
            $ref: "#/components/schemas/Link"
        coupon:
          $ref: "#/components/schemas/Coupon"
    PaymentStatus:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          description: Payment Status
          enum:
            - inProgress
            - paid
            - canceled
    Link:
      description: dynamically generated links from paypal
      type: object
      properties:
        href:
          type: string
        rel:
          type: string
        method:
          type: string
    Client:
      type: object
      properties:
        id:
          type: integer
          format: int64
        firstName:
          type: string
        lastName:
          type: string
        client:
          $ref: "#/components/schemas/Address"
        email:
          type: string
        phone:
          type: string
        company:
          type: string
        note:
          type: string
        preferedDeliveryTime:
          type: string
    Address:
      type: object
      properties:
        id:
          type: integer
          format: int64
        street:
          type: string
        streetNo:
          type: number
        city:
          type: string
        postcode:
          type: number
        floor:
          type: string
    Company:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        imprint:
          type: string
        deliveryTimes:
          type: array
          items:
            $ref: "#/components/schemas/DeliveryTime"
        minDeliveryAmount:
          type: number
        paymentMethods:
          type: array
          items:
            $ref: "#/components/schemas/Payment"
        status:
          type: string
          description: Opening Status
          enum:
            - open
            - closed
        deliveryPoscodes:
          type: array
          items:
            $ref: "#/components/schemas/Postcode"
        rating:
          $ref: "#/components/schemas/Rating"
    DeliveryTime:
      type: object
      properties:
        id:
          type: integer
          format: int64
        day:
          type: string
        startTime:
          type: string
        endTime:
          type: string
    EMail:
      type: object
      properties:
        id:
          type: integer
          format: int64
        from:
          type: string
        to:
          type: string
        message:
          type: string
        company:
          $ref: "#/components/schemas/Company"
    Postcode:
      type: object
      properties:
        id:
          type: integer
          format: int64
        number:
          type: number
        long:
          type: string
        lat:
          type: string
    Rating:
      type: object
      properties:
        id:
          type: integer
          format: int64
        number:
          type: number
    Coupon:
      type: object
      properties:
        id:
          type: integer
          format: int64
        number:
          type: number
        client:
          $ref: "#/components/schemas/Client"
        status:
          type: string
          description: Used Status
          enum:
            - unused
            - used
